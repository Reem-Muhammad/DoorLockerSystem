/*
 * Ocu.h
 *
 *  Created on: 4 Oct 2019
 *      Author: Home
 */

#ifndef OCU_H_
#define OCU_H_

#include "std_types.h"
#include "common_macros.h"
#include "micro_config.h"


#define CHANNEL_1A 0
#define CHANNEL_1B 1
#define TOP_OCR_MODE 4	/*TOP value will determined by OCR register*/

/*~~~~~~~~~~~~~~~~~~~~~~~~ Type Definitions ~~~~~~~~~~~~~~~~~~~~~~*/
/*Numeric identifier of an OCU channel*/
typedef uint8 Ocu_ChannelType;

/*for reading the counter and writing the threshold values (in number of ticks)*/
typedef uint16 Ocu_ValueType;

/*Output state of the pin linked to an OCU channel --> XXXX DELETE*/
typedef enum
{
	OCU_LOW, OCU_HIGH
}Ocu_PinStateType;

/*Automatic action (by hardware) to be performed on a pin attached to an OCU channel.*/
typedef enum
{
	OCU_DISABLE, OCU_TOGGLE, OCU_SET_LOW, OCU_SET_HIGH
}Ocu_PinActionType;

typedef enum
{
	NO_CLOCK_SOURCE, OCU_PRESCALER_1, OCU_PRESCALER_8, OCU_PRESCALER_64, OCU_PRESCALER_256, OCU_PRESCALER_1024
}Ocu_PrescalerType;

/*type of the data structure containing the initialization data for the OCU driver*/
typedef struct
{
	/*
	 * Mandatory parameters:
	 * 	 Symbolic name for channel / channel ID
	 * 	 maximum value of the counter --> TOP
	 * 	 Time resolution in number of ticks ?? if tick duration = 0.128msec, it should notify the user each 10 ticks?
	 * 	 Notification function 					_/
	 * 	 Default value of the threshold ??		XX
	 * 	 Minimum value of the counter --> TCNT?  XX always start from 0
	 * 	 Microcontroller OCU-specific HW properties (optional prescaler, clock settings if supported by hardware)
	 */

	/*
	 * - set the clock source (prescaler) --> CS12:0 - TCCR1B
	 * -
	 */

	void (*Ocu_NotificationPtr)() = NULL_PTR;	/*reference to a callback function*/
	Ocu_PrescalerType e_ocu_prescaler;


}Ocu_ConfigType;
/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/




/*~~~~~~~~~~~~~~~~~~~~~~~ Functions Definitions ~~~~~~~~~~~~~~~~~~~~~*/
void Ocu_Init(const Ocu_ConfigType* ConfigPtr);
void Ocu_DeInit(void);
void Ocu_SetPinAction(Ocu_ChannelType ChannelNumber, Ocu_PinActionType PinAction);
void Ocu_SetAbsoluteThreshold( Ocu_ChannelType ChannelNumber, Ocu_ValueType AbsoluteValue);
void Ocu_Notification_0(void);
void Ocu_Notification_1(void);

#endif /* OCU_H_ */
