/*
 * hmi_ecu_functions.c
 *
 *  Created on: 6 Oct 2019
 *      Author: Home
 */

#include "hmi_ecu_functions.h"

void alarmStart()
{
	alarmOn_flag = 1;
	LCD_clear();
	LCD_goToRowCol(0,7);
	LCD_displayString("INTRUDER ALERT!!! ");

	UART_sendByte(START_ALARM);

	/*start the timer*/
	Ocu_start(46874, 10);


}


void alarmStop()
{
	alarmOn_flag = 0;
	//LCD_goToRowCol(0,0);
	//LCD_displayString("Alarm Stopped            ");
	_delay_ms(100);

	UART_sendByte(STOP_ALARM);
	/*terminate the timer*/
	Ocu_stop();
}


/*------------------------------------------
 * [Function Name]: setNewPass
 * [Description]: lets the user to set a new password to be saved in the EEPROM
 * [Args]: None
 * [Return]: None
 -------------------------------------------*/
void setNewPass()
{
	UART_sendByte(SET_NEW_PASS);
	/*Display instructions for the user*/
	LCD_goToRowCol(0,0);
	LCD_displayString("Please Enter New Pass:        ");
	LCD_goToRowCol(1,0);
	LCD_displayString("-----                  ");

	password_counter = 0;
	LCD_goToRowCol(1,0);

	/*Enter 5 digits, and transmit them to the control ECU*/
	while(password_counter < PASSWORD_LENGTH)
	{
		key = keypad_getPressedKey();
		UART_sendByte(key);
		_delay_ms(400);

		/*Display '*' instead of the actual digit*/
		LCD_displayCharacter('*');

		password_counter++;
	}

	/*Display instructions for the user*/
	LCD_goToRowCol(0,0);
	LCD_displayString("Press 'C' To Enter.           ");

	/*wait until the user enters 'C'*/
	key = keypad_getPressedKey();
	while(key != 'C')
	{
		key = keypad_getPressedKey();

	}
	_delay_ms(400); //if not introduced, the first digit in the confirmation password would be 'C'
}



/*------------------------------------------
 * [Function Name]: confirmPass
 * [Description]: Sends the confirmation password to the control ECU to be compared with the saved one
 * [Args]: None
 * [Return]:
		CONFIRMATION_FAILED for password mismatch
		CONFIRMATION_PASS for password match
 -------------------------------------------*/
uint8 confirmPass()
{
	UART_sendByte(CONFIRM_PASS);
	/*Display instructions for the user*/
	LCD_goToRowCol(0,0);
	LCD_displayString("Please Confirm The Password:           ");
	LCD_goToRowCol(1,0);
	LCD_displayString("-----                     ");

	password_counter = 0;
	LCD_goToRowCol(1,0);

	/*Send the confirmation password to the control ECU*/
	while(password_counter < PASSWORD_LENGTH)
	{
		key = keypad_getPressedKey();
		UART_sendByte(key);
		_delay_ms(400);

		/*Display '*' instead of the actual digit*/
		LCD_displayCharacter('*');
		password_counter++;
	}

	/*Display instructions for the user*/
	LCD_goToRowCol(0,0);
	LCD_displayString("Press 'C' To Enter.         ");

	/*wait until the user enters 'C'*/
	key = keypad_getPressedKey();
	while(key != 'C')
	{
		key = keypad_getPressedKey();
	}

	_delay_ms(400); //if not introduced and there was a mismatch, the first digit of the new password would be 'C'
	//uint8 confirm = UART_receiveByte(); //[SOLVED] doesn't return --> reason: Eep_Write() wasn't returning due to the polling in TWI_stop()

	return UART_receiveByte();
}
