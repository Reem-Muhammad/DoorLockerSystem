/*
 * EEPROM.c
 *
 *  Created on: 28 Sep 2019
 *      Author: Home
 */


#include "EEPROM.h"
/**/
#include "I2C.h"

#define TWI_OWN_ADDRESS 0b00000100

Twi_ConfigType s_Twi_Config = {TWI_PRESCALER_VALUE_1, GENERAL_CALL_RECOGNITION_ENABLED,TWI_OWN_ADDRESS, 2};};

/*-----------------------------------------------
 * [Function Name]: Eep_init
 * [Description]: initializes the I2C interface for the EEPROM
 * [Args]: None
 * [Return]: None
 ------------------------------------------------*/
void Eep_init()
{
	TWI_init(&s_Twi_Config);

}

/*-----------------------------------------------
 * [Function Name]: Eep_Read
 * [Description]: reads the specified number of bytes from the EEPROM
 * [Args]:
 * 		EepromAddress:Address in EEPROM (assuming the EEPROM has 0 as base address)
 * 		DataBufferPtr: Pointer to destination data buffer in RAM
 * 		Length: Number of bytes to read
 * [Return]:
 * 		E_OK: success
 * 		E_NOT_OK: failure
 ------------------------------------------------*/
uint8 Eep_Read(Eep_AddressType EepromAddress, uint8 *DataBufferPtr, Eep_LengthType Length)
{
	uint8 DataBufferIndex = 0;

	TWI_start();

	/*
	 * Device select code:
	 * b7	b6	b	b4		b3	 b2	 b1	 b0
	 *<--identifier-->   	A10  A9  A8  R
	 *
	 *
	 *  EepromAddress: 0000 0XXX XXXX XXXX
	 *	&	0x700: 	   0000 0111 0000 0000
	 *				=  0000 0XXX 0000 0000  >> 7 = 0000 0000 0000 XXX0
	 *										     +                   1
	 *										     = 0000 0000 0000 XXX1
	 *										     |           1010 0000
	 *										     = 0000 0000 1010 XXX1
	 */
	TWI_writeByte( (DEVICE_TYPE_IDENTIFIER<<4) | ( (EepromAddress & 0x0700) >>7) + READ);

}
